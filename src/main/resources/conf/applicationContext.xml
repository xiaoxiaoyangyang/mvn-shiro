<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xsi:schemaLocation="
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
			">
	<import resource="spring-shiro.xml"></import>
	<!-- 引入配置文件 -->
	<context:property-placeholder location="classpath:conf/jdbc.properties"/>
	<!-- 告知spring开启注解在那里使用了注解-->
	<context:component-scan base-package="com.yangyang.service"></context:component-scan>
	<!-- 和数据库创建连接 -->
	<bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.userName}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	<!-- 创建sqlSession工厂 -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
		<!-- 引入连接 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 读取配置文件 -->
		<property name="mapperLocations">
			<list>
				<value>classpath:mapper/*Mapper.xml</value>
			</list>
		</property>
		<!-- 可以给实体类进行起别名，在mapper文件当中 如User -->
		<!--<property name="typeAliasesPackage" value="com.zpark.entity"></property>-->
	</bean>

	<!-- 创建接口的代理实现类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.yangyang.mapper"></property>
	</bean>

	<!-- 创建事务管理器 -->
	<bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="myManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!--&lt;!&ndash; 设置切点规则 &ndash;&gt;-->
	<!--<tx:advice transaction-manager="myManager" id="myAdvice">-->
		<!--<tx:attributes>-->
			<!--<tx:method name="select*" read-only="true"/>-->
			<!--<tx:method name="*" propagation="REQUIRED"/>-->
		<!--</tx:attributes>-->
	<!--</tx:advice>-->

	<!--<aop:config>-->
		<!--&lt;!&ndash; 设置切点 &ndash;&gt;-->
		<!--<aop:pointcut expression="execution(* com.yangyang.service.*.*(..))" id="servicePoint"/>-->
		<!--&lt;!&ndash; 编制处理 &ndash;&gt;-->
		<!--<aop:advisor advice-ref="myAdvice" pointcut-ref="servicePoint"/>-->
	<!--</aop:config>-->
	<tx:annotation-driven transaction-manager="myManager"></tx:annotation-driven>
</beans>
